<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Dosen extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		$session = isset($_SESSION['username_admin']) ? $_SESSION['username_admin']:'';
		if($session==""){
			redirect("login/loginadmin","refresh");
		}
        $this->load->model('Dosen_model');
    } 

    /*
     * Listing of dosen
     */
    function index()
    {
        $data['dosen'] = $this->Dosen_model->get_all_dosen();

        $data['_view'] = 'dosen/index';
		$data['judulform'] = 'DOSEN';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new dosen
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required');
		$this->form_validation->set_rules('kode_dosen','Kode Dosen','required');
		$this->form_validation->set_rules('nama_dosen','Nama Dosen','required');
		$this->form_validation->set_rules('jk','Jk','required');
		$this->form_validation->set_rules('level','Level','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'jk' => $this->input->post('jk',TRUE),
				'level' => $this->input->post('level',TRUE),
				'password' => md5(sha1($this->input->post('password',TRUE))),
				'kode_dosen' => $this->input->post('kode_dosen',TRUE),
				'nama_dosen' => $this->input->post('nama_dosen',TRUE),
				'diinput_oleh' => $_SESSION['username_admin'],
            );
            
            $dosen_id = $this->Dosen_model->add_dosen($params);
            redirect('dosen/index');
        }
        else
        {            
            $data['_view'] = 'dosen/add';
			$data['judulform'] = 'DOSEN';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a dosen
     */
    function edit($id_dosen)
    {   
        // check if the dosen exists before trying to edit it
        $data['dosen'] = $this->Dosen_model->get_dosen($id_dosen);
        
        if(isset($data['dosen']['id_dosen']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','required');
			$this->form_validation->set_rules('kode_dosen','Kode Dosen','required');
			$this->form_validation->set_rules('nama_dosen','Nama Dosen','required');
			$this->form_validation->set_rules('jk','Jk','required');
			$this->form_validation->set_rules('level','Level','required');
		
			if($this->form_validation->run())     
            {   
                if($this->input->post('password')<>""){
					$params = array(
						'jk' => $this->input->post('jk',TRUE),
						'level' => $this->input->post('level',TRUE),
						'password' => md5(sha1($this->input->post('password',TRUE))),
						'kode_dosen' => $this->input->post('kode_dosen',TRUE),
						'nama_dosen' => $this->input->post('nama_dosen',TRUE),
						'diupdate_oleh' => $_SESSION['username_admin'],
					);
				}else{
					$params = array(
						'jk' => $this->input->post('jk',TRUE),
						'level' => $this->input->post('level',TRUE),
						'kode_dosen' => $this->input->post('kode_dosen',TRUE),
						'nama_dosen' => $this->input->post('nama_dosen',TRUE),
						'diupdate_oleh' => $_SESSION['username_admin'],
					);
				}
				
                $this->Dosen_model->update_dosen($id_dosen,$params);            
                redirect('dosen/index');
            }
            else
            {
                $data['_view'] = 'dosen/edit';
				$data['judulform'] = 'DOSEN';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The dosen you are trying to edit does not exist.');
    } 

    /*
     * Deleting dosen
     */
    function remove($id_dosen)
    {
        $dosen = $this->Dosen_model->get_dosen($id_dosen);

        // check if the dosen exists before trying to delete it
        if(isset($dosen['id_dosen']))
        {
            $this->Dosen_model->delete_dosen($id_dosen);
            redirect('dosen/index');
        }
        else
            show_error('The dosen you are trying to delete does not exist.');
    }
	
	function import()
    {   
		if(isset($_POST['submit']))     
        {
			$this->load->library("PHPExcel");
			$config['upload_path'] = './excels/';
			$config['allowed_types'] = 'xlsx|xls';
			
			$this->load->library('upload', $config);
			
			if(!$this->upload->do_upload()){
				//$error = array('error' => $this->upload->display_errors());
				echo "<script>alert('File belum dipilih.');</script>";
				redirect('dosen/import','refresh');
			}
			else{
				$data = array('upload_data' => $this->upload->data());
				$upload_data = $this->upload->data(); //Mengambil detail data yang di upload
				$filename = $upload_data['file_name'];//Nama File
				
				$this->Dosen_model->upload_data($filename);
				
				unlink('./excels/'.$filename);
				redirect('dosen','refresh');
			}
		}
        else
        {
			$data['_view'] = 'dosen/import';
			$data['judulform'] = 'DOSEN';
            $this->load->view('layouts/main',$data);
        }
    }
    
}
