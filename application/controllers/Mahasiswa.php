<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Mahasiswa extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		$session = isset($_SESSION['username_admin']) ? $_SESSION['username_admin']:'';
		if($session==""){
			redirect("login","refresh");
		}
        $this->load->model('Mahasiswa_model');
    } 

    /*
     * Listing of mahasiswa
     */
    function index()
    {
        $data['mahasiswa'] = $this->Mahasiswa_model->get_all_mahasiswa_gigi();

        $data['_view'] = 'mahasiswa/index';
		$data['judulform'] = 'MAHASISWA';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new mahasiswa
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','required');
		$this->form_validation->set_rules('nim','Nim','required');
		$this->form_validation->set_rules('nama_mahasiswa','Nama Mahasiswa','required');
		$this->form_validation->set_rules('jk','Jk','required');
		$this->form_validation->set_rules('hp','HP','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'jk' => $this->input->post('jk',TRUE),
				'password' => md5(sha1($this->input->post('password',TRUE))),
				'nim' => $this->input->post('nim',TRUE),
				'nama_mahasiswa' => $this->input->post('nama_mahasiswa',TRUE),
				'diinput_oleh' => $_SESSION['username_admin'],
				'hp' => $this->input->post('hp',TRUE),
            );
            
            $mahasiswa_id = $this->Mahasiswa_model->add_mahasiswa($params);
            redirect('mahasiswa/index');
        }
        else
        {
			$this->load->model('mahasiswa_model');
			$data['all_mahasiswa'] = $this->mahasiswa_model->get_all_mahasiswa();
            
            $data['_view'] = 'mahasiswa/add';
			$data['judulform'] = 'MAHASISWA';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a mahasiswa
     */
    function edit($id_mahasiswa)
    {   
        // check if the mahasiswa exists before trying to edit it
        $data['mahasiswa'] = $this->Mahasiswa_model->get_mahasiswa($id_mahasiswa);
        
        if(isset($data['mahasiswa']['id_mahasiswa']))
        {
            $this->load->library('form_validation');

			//$this->form_validation->set_rules('password','Password','required');
			$this->form_validation->set_rules('nim','Nim','required');
			$this->form_validation->set_rules('nama_mahasiswa','Nama Mahasiswa','required');
			$this->form_validation->set_rules('hp','HP','required');
			$this->form_validation->set_rules('jk','Jk','required');
		
			if($this->form_validation->run())     
            {   
                if($this->input->post('password',TRUE)==''){
					$params = array(
						'jk' => $this->input->post('jk',TRUE),
						'hp' => $this->input->post('hp',TRUE),
						'nim' => $this->input->post('nim',TRUE),
						'nama_mahasiswa' => $this->input->post('nama_mahasiswa',TRUE),
						'diupdate_oleh' => $_SESSION['username_admin'],
					);
				}else{
					$params = array(
						'jk' => $this->input->post('jk',TRUE),
						'hp' => $this->input->post('hp',TRUE),
						'password' => md5(sha1($this->input->post('password',TRUE))),
						'nim' => $this->input->post('nim',TRUE),
						'nama_mahasiswa' => $this->input->post('nama_mahasiswa',TRUE),
						'diupdate_oleh' => $_SESSION['username_admin'],
					);	
				}
				
                $this->Mahasiswa_model->update_mahasiswa($id_mahasiswa,$params);            
                redirect('mahasiswa/index');
            }
            else
            {
				$this->load->model('mahasiswa_model');
				$data['all_mahasiswa'] = $this->mahasiswa_model->get_all_mahasiswa();

                $data['_view'] = 'mahasiswa/edit';
				$data['judulform'] = 'MAHASISWA';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The mahasiswa you are trying to edit does not exist.');
    } 

    /*
     * Deleting mahasiswa
     */
    function remove($id_mahasiswa)
    {
        if($_SESSION['level_admin']=='su'){
			$mahasiswa = $this->Mahasiswa_model->get_mahasiswa($id_mahasiswa);

			// check if the mahasiswa exists before trying to delete it
			if(isset($mahasiswa['id_mahasiswa']))
			{
				$this->Mahasiswa_model->delete_mahasiswa($id_mahasiswa);
				redirect('mahasiswa/index');
			}
			else
				show_error('The mahasiswa you are trying to delete does not exist.');
		}else{
			redirect("mahasiswa","refresh");
		}
	}
	
	function import()
    {   
		if(isset($_POST['submit']))     
        {
			$this->load->library("PHPExcel");
			$config['upload_path'] = './excels/';
			$config['allowed_types'] = 'xlsx|xls';
			
			$this->load->library('upload', $config);
			
			if(!$this->upload->do_upload()){
				//$error = array('error' => $this->upload->display_errors());
				echo "<script>alert('File belum dipilih.');</script>";
				redirect('mahasiswa/import','refresh');
			}
			else{
				$data = array('upload_data' => $this->upload->data());
				$upload_data = $this->upload->data(); //Mengambil detail data yang di upload
				$filename = $upload_data['file_name'];//Nama File
				
				$this->Mahasiswa_model->upload_data($filename);
				
				unlink('./excels/'.$filename);
				redirect('mahasiswa','refresh');
			}
		}
        else
        {
			$data['_view'] = 'mahasiswa/import';
			$data['judulform'] = 'Mahasiswa';
            $this->load->view('layouts/main',$data);
        }
    }
    
}
