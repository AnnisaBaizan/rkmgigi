<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Sub_praktikum extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		$session = isset($_SESSION['username_admin']) ? $_SESSION['username_admin']:'';
		if($session==""){
			redirect("login","refresh");
		}
        $this->load->model('Sub_praktikum_model');
    } 

    /*
     * Listing of sub_praktikum
     */
    function index()
    {
        $data['sub_praktikum'] = $this->Sub_praktikum_model->get_all_sub_praktikum();

        $data['_view'] = 'sub_praktikum/index';
		$data['judulform'] = 'SUB PRAKTIKUM';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new sub_praktikum
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('kd_praktikum','Kd Praktikum','required');
		$this->form_validation->set_rules('nama_sub_praktikum','Nama Sub Praktikum','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'kd_praktikum' => $this->input->post('kd_praktikum'),
				'nama_sub_praktikum' => $this->input->post('nama_sub_praktikum'),
				'diinput_oleh' => $_SESSION['username_admin'],
            );
            
            $sub_praktikum_id = $this->Sub_praktikum_model->add_sub_praktikum($params);
            redirect('sub_praktikum/index');
        }
        else
        {
			$this->load->model('Praktikum_model');
			$data['all_praktikum'] = $this->Praktikum_model->get_all_praktikum();
            
            $data['_view'] = 'sub_praktikum/add';
			$data['judulform'] = 'SUB PRAKTIKUM';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a sub_praktikum
     */
    function edit($id_sub_praktikum)
    {   
        // check if the sub_praktikum exists before trying to edit it
        $data['sub_praktikum'] = $this->Sub_praktikum_model->get_sub_praktikum($id_sub_praktikum);
        
        if(isset($data['sub_praktikum']['id_sub_praktikum']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('kd_praktikum','Kd Praktikum','required');
			$this->form_validation->set_rules('nama_sub_praktikum','Nama Sub Praktikum','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'kd_praktikum' => $this->input->post('kd_praktikum'),
					'nama_sub_praktikum' => $this->input->post('nama_sub_praktikum'),
					'diupdate_oleh' => $_SESSION['username_admin'],
                );

                $this->Sub_praktikum_model->update_sub_praktikum($id_sub_praktikum,$params);            
                redirect('sub_praktikum/index');
            }
            else
            {
				$this->load->model('Praktikum_model');
				$data['all_praktikum'] = $this->Praktikum_model->get_all_praktikum();

                $data['_view'] = 'sub_praktikum/edit';
				$data['judulform'] = 'SUB PRAKTIKUM';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The sub_praktikum you are trying to edit does not exist.');
    } 

    /*
     * Deleting sub_praktikum
     */
    function remove($id_sub_praktikum)
    {
        $sub_praktikum = $this->Sub_praktikum_model->get_sub_praktikum($id_sub_praktikum);

        // check if the sub_praktikum exists before trying to delete it
        if(isset($sub_praktikum['id_sub_praktikum']))
        {
            $this->Sub_praktikum_model->delete_sub_praktikum($id_sub_praktikum);
            redirect('sub_praktikum/index');
        }
        else
            show_error('The sub_praktikum you are trying to delete does not exist.');
    }
    
}
