<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Sub_aspek extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		$session = isset($_SESSION['username_admin']) ? $_SESSION['username_admin']:'';
		if($session==""){
			redirect("login","refresh");
		}
        $this->load->model('Sub_aspek_model');
    } 

    /*
     * Listing of sub_aspek
     */
    function index()
    {
        $data['sub_aspek'] = $this->Sub_aspek_model->get_all_sub_aspek();

        $data['_view'] = 'sub_aspek/index';
		$data['judulform'] = 'SUB ASPEK';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new sub_aspek
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('kd_aspek','Kd Aspek','required');
		$this->form_validation->set_rules('nama_sub_aspek','Nama Sub Aspek','required');
		$this->form_validation->set_rules('rentang_skor_awal','Rentang Skor Awal','required|numeric');
		$this->form_validation->set_rules('rentang_skor_akhir','Rentang Skor Akhir','required|numeric');
		$this->form_validation->set_rules('bobot','Bobot','required|numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'kd_aspek' => $this->input->post('kd_aspek', TRUE),
				'nama_sub_aspek' => $this->input->post('nama_sub_aspek', TRUE),
				'rentang_skor_awal' => $this->input->post('rentang_skor_awal', TRUE),
				'rentang_skor_akhir' => $this->input->post('rentang_skor_akhir', TRUE),
				'bobot' => $this->input->post('bobot', TRUE),
				'diinput_oleh' => $_SESSION['username_admin'],
            );
            
            $sub_aspek_id = $this->Sub_aspek_model->add_sub_aspek($params);
			$this->session->set_flashdata('success', 'Sub aspek sudah ditambahkan.');
			
			$this->load->model('Aspek_model');
			$data['all_aspek'] = $this->Aspek_model->get_all_aspek();
            
            $data['_view'] = 'sub_aspek/add';
			$data['judulform'] = 'SUB ASPEK';
            $this->load->view('layouts/main',$data); 
            //redirect('sub_aspek/add');
        }
        else
        {
			$this->load->model('Aspek_model');
			$data['all_aspek'] = $this->Aspek_model->get_all_aspek();
            
            $data['_view'] = 'sub_aspek/add';
			$data['judulform'] = 'SUB ASPEK';
            $this->load->view('layouts/main',$data);
        }
    }  
	
	function add_multi()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('kd_aspek1','Kd Aspek','required');
		$this->form_validation->set_rules('nama_sub_aspek1','Nama Sub Aspek','required');
		$this->form_validation->set_rules('rentang_skor_awal1','Rentang Skor Awal','required|numeric');
		$this->form_validation->set_rules('rentang_skor_akhir1','Rentang Skor Akhir','required|numeric');
		$this->form_validation->set_rules('bobot1','Bobot','required|numeric');
		$this->form_validation->set_rules('jumlah','Jumlah','required|numeric');
		
		if($this->form_validation->run())     
        {   
			$this->db->trans_begin();
			
            $params = array();
			for($i=1;$i<=$this->input->post('jumlah', TRUE);$i++){
				$params[$i]['kd_aspek'] 		= $_POST['kd_aspek1'];
				//$params[$i]['nama_sub_aspek'] 	= strtoupper($_POST['nama_sub_aspek'.$i]);
				$params[$i]['nama_sub_aspek'] 	= $_POST['nama_sub_aspek'.$i];
				$params[$i]['rentang_skor_awal'] 	= $_POST['rentang_skor_awal'.$i];
				$params[$i]['rentang_skor_akhir'] 	= $_POST['rentang_skor_akhir'.$i];
				$params[$i]['bobot'] 				= $_POST['bobot'.$i];
				$params[$i]['diinput_oleh'] 		= $_SESSION['username_admin'];
			}
			$this->db->insert_batch('tbl_sub_aspek', $params);
			$this->db->trans_complete();
			
			if ($this->db->trans_status() === FALSE){	
				$this->db->trans_rollback();
				echo "<script>alert('Gagal Disimpan Periksa Penerima Mungkin Belum dipilih !!'); window.history.back();</script>";
			} else {
				$this->db->trans_commit();
				redirect('sub_aspek/index');
			}
			
			/*$params = array(
				'kd_aspek' => $this->input->post('kd_aspek', TRUE),
				'nama_sub_aspek' => $this->input->post('nama_sub_aspek', TRUE),
				'rentang_skor_awal' => $this->input->post('rentang_skor_awal', TRUE),
				'rentang_skor_akhir' => $this->input->post('rentang_skor_akhir', TRUE),
				'bobot' => $this->input->post('bobot', TRUE),
				'diinput_oleh' => $_SESSION['username_admin'],
            );*/
            
            //$sub_aspek_id = $this->Sub_aspek_model->add_sub_aspek($params);
            //redirect('sub_aspek/index');
        }
        else
        {
			$this->load->model('Aspek_model');
			$data['all_aspek'] = $this->Aspek_model->get_all_aspek();
            
            $data['_view'] = 'sub_aspek/add_multi';
			$data['judulform'] = 'SUB ASPEK';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a sub_aspek
     */
    function edit($id_sub_aspek)
    {   
        // check if the sub_aspek exists before trying to edit it
        $data['sub_aspek'] = $this->Sub_aspek_model->get_sub_aspek($id_sub_aspek);
        
        if(isset($data['sub_aspek']['id_sub_aspek']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('kd_aspek','Kd Aspek','required');
			$this->form_validation->set_rules('nama_sub_aspek','Nama Sub Aspek','required');
			$this->form_validation->set_rules('rentang_skor_awal','Rentang Skor Awal','required|numeric');
			$this->form_validation->set_rules('rentang_skor_akhir','Rentang Skor Akhir','required|numeric');
			$this->form_validation->set_rules('bobot','Bobot','required|numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'kd_aspek' => $this->input->post('kd_aspek', TRUE),
					'nama_sub_aspek' => $this->input->post('nama_sub_aspek', TRUE),
					'rentang_skor_awal' => $this->input->post('rentang_skor_awal', TRUE),
					'rentang_skor_akhir' => $this->input->post('rentang_skor_akhir', TRUE),
					'bobot' => $this->input->post('bobot', TRUE),
					'diupdate_oleh' => $_SESSION['username_admin'],
                );

                $this->Sub_aspek_model->update_sub_aspek($id_sub_aspek,$params);            
                redirect('sub_aspek/index');
            }
            else
            {
				$this->load->model('Aspek_model');
				$data['all_aspek'] = $this->Aspek_model->get_all_aspek();

                $data['_view'] = 'sub_aspek/edit';
				$data['judulform'] = 'SUB ASPEK';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The sub_aspek you are trying to edit does not exist.');
    } 

    /*
     * Deleting sub_aspek
     */
    function remove($id_sub_aspek)
    {
        $sub_aspek = $this->Sub_aspek_model->get_sub_aspek($id_sub_aspek);

        // check if the sub_aspek exists before trying to delete it
        if(isset($sub_aspek['id_sub_aspek']))
        {
            $this->Sub_aspek_model->delete_sub_aspek($id_sub_aspek);
            redirect('sub_aspek/index');
        }
        else
            show_error('The sub_aspek you are trying to delete does not exist.');
    }
    
}
