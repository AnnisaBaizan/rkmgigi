<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Mahasiswa_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get mahasiswa by id_mahasiswa
     */
    function get_mahasiswa($id_mahasiswa)
    {
        return $this->db->get_where('tbl_mahasiswa',array('id_mahasiswa'=>$id_mahasiswa))->row_array();
    }
	
	function get_mahasiswa_nim($id_mahasiswa)
    {
        //return $this->db->get_where('tbl_mahasiswa',array('nim'=>$id_mahasiswa))->row_array();
		return $this->db->query("select * from tbl_mahasiswa a 
								where a.nim=?",array($id_mahasiswa))->row_array();
    }
    
    /*
     * Get all mahasiswa dengan jumlah praktek
     */
    function get_all_mahasiswa()
    {
        return $this->db->query('select a.*, b.kode_dosen, b.nama_dosen, count(*) as jpraktek 
		from tbl_mahasiswa a 
		
		join tbl_nilai_praktek c
			on a.nim=c.nim
		join tbl_dosen b 
			on c.kode_dosen=b.kode_dosen	
		group by a.nim')->result_array();
    }
	
	/*
     * Get all mahasiswa 
     */
    function get_all_mahasiswa_gigi()
    {
        return $this->db->query('select * from tbl_mahasiswa order by nama_mahasiswa asc')->result_array();
    }
	
	/*
     * Get all mahasiswa dosen
     */
    function get_all_mahasiswa_gigi_dosen()
    {
        if($_SESSION['level_dosen']==2){
			return $this->db->query('select * from tbl_mahasiswa a 
								join tbl_nilai_praktek b  
									on a.nim=b.nim
								group by a.nim	
								order by nama_mahasiswa asc')->result_array();
		}else{
			return $this->db->query('select * from tbl_mahasiswa a 
								join tbl_nilai_praktek b  
									on a.nim=b.nim
								where b.kode_dosen = ?
								group by a.nim, b.kode_dosen	
								order by nama_mahasiswa asc', array($_SESSION['kode_dosen']))->result_array();
		}
    }
    
    /*
     * function to add new mahasiswa
     */
    function add_mahasiswa($params)
    {
        $this->db->insert('tbl_mahasiswa',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update mahasiswa
     */
    function update_mahasiswa($id_mahasiswa,$params)
    {
        $this->db->where('id_mahasiswa',$id_mahasiswa);
        $response = $this->db->update('tbl_mahasiswa',$params);
        if($response)
        {
            return "mahasiswa updated successfully";
        }
        else
        {
            return "Error occuring while updating mahasiswa";
        }
    }
    
    /*
     * function to delete mahasiswa
     */
    function delete_mahasiswa($id_mahasiswa)
    {
        $response = $this->db->delete('tbl_mahasiswa',array('id_mahasiswa'=>$id_mahasiswa));
        if($response)
        {
            return "mahasiswa deleted successfully";
        }
        else
        {
            return "Error occuring while deleting mahasiswa";
        }
    }
	
	public function upload_data($filename){
        ini_set('memory_limit', '-1');
        $inputFileName = './excels/'.$filename;
        try {
        $objPHPExcel = PHPExcel_IOFactory::load($inputFileName);
        } catch(Exception $e) {
        die('Error loading file :' . $e->getMessage());
        }

        $worksheet = $objPHPExcel->getActiveSheet()->toArray(null,true,true,true);
        $numRows = count($worksheet);

        for ($i=2; $i < ($numRows+1) ; $i++) { 
            $ins = array(
                    "nim"    			=> $worksheet[$i]["A"],
                    "nama_mahasiswa"   	=> $worksheet[$i]["B"],
					"jk"   				=> $worksheet[$i]["C"],
					"hp"   				=> $worksheet[$i]["D"],
					"password"   		=> md5(sha1($worksheet[$i]["A"])),
					"diinput_oleh" 		=> $_SESSION['username_admin']
                   );

            $this->db->insert('tbl_mahasiswa', $ins);
        }
    }
}
